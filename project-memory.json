{
  "project_goals": [
    "Browser-based retro 16-bit game",
    "Agent-generated puzzles, levels, and music",
    "Fully testable (Vitest + Playwright)"
  ],
  "current_phase": "POC",
  "coding_rules": {
    "architecture": "modular",
    "tests": "required for all core modules",
    "audio": "Tone.js only for POC/MVP",
    "graphics": "ASCII maps -> tile sprites"
  },
  "agent_roles": {
    "alpha": "feature dev & unit tests",
    "beta": "QA, lint, docs, E2E tests"
  },
  "workflow": {
    "pr_creation": "agents can create full PRs with GitHub CLI",
    "branching": "feature branches should follow feature/alpha/* or feature/beta/* pattern and always branch from develop, never from main",
    "ci_checks": "wait 30 seconds after making/updating PRs to check for CI status and comments, and continue checking until all checks are finished",
    "pr_review": "when working with another agent to review, approve, and merge PRs, sleep the terminal for 30 seconds between checks to see any comments or reviews from the other agent",
    "release_process": "never push directly to main; only release to main when develop is fully tested and ready for release"
  },
  "must": [
    "compile with no TS errors",
    "run all unit + E2E tests",
    "run lint & format checks",
    "update docs with any public API changes",
    "always branch from develop, never from main"
  ],
  "donot": [
    "over-engineer UI systems",
    "add >2 puzzle types before MVP",
    "depend on external visual editors",
    "merge without green CI",
    "push directly to main",
    "create feature branches from main"
  ]
}